<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nju.agile.blog.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.nju.agile.blog.entity.User">
        <id property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userPass" column="user_pass" jdbcType="VARCHAR"/>

        <result property="userNickname" column="user_nickname" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" jdbcType="VARCHAR"/>
        <result property="userUrl" column="user_url" jdbcType="VARCHAR"/>

        <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
        <result property="userLastLoginIp" column="user_last_login_ip" jdbcType="VARCHAR"/>
        <result property="userRegisterTime" column="user_register_time" jdbcType="TIMESTAMP"/>

        <result property="userLastLoginTime" column="user_last_login_time" jdbcType="TIMESTAMP"/>
        <result property="userStatus" column="user_status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="table">user</sql>

    <sql id="base_column_list">
        user_id,user_name,user_pass,
        user_nickname,user_email,user_url,
        user_avatar,user_last_login_ip,user_register_time,
        user_last_login_time,user_status
    </sql>

    <insert id="insert" parameterType="com.nju.agile.blog.entity.User" useGeneratedKeys="true" keyProperty="userId">
        insert into
        <include refid="table"/>
        (<include refid="base_column_list"/>)
        values
        (#{userId,jdbcType="INTEGER"},
        #{userName,jdbcType="VARCHAR"},
        #{userPass,jdbcType="VARCHAR"},
        #{userNickname,jdbcType="VARCHAR"},
        #{userEmail,jdbcType="VARCHAR"},
        #{userUrl,jdbcType="VARCHAR"},
        #{userAvatar,jdbcType="VARCHAR"},
        #{userLastLoginIp,jdbcType="VARCHAR"},
        #{userRegisterTime,jdbcType="TIMESTAMP"},
        #{userLastLoginTime,jdbcType="TIMESTAMP"},
        #{userStatus,jdbcType="INTEGER"})
    </insert>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from
        <include refid="table"/>
        where user_id = #{userId,jdbcType="INTEGER"}
    </delete>


    <update id="update" parameterType="com.nju.agile.blog.entity.User" >
        update
        <include refid="table"/>
        <set>
            <if test="userName != null">user_name = #{userName, jdbcType="VARCHAR"},</if>
            <if test="userPass != null"> user_pass = #{userPass, jdbcType="VARCHAR"},</if>
            <if test="userNickname != null"> userNickname = #{userNickname, jdbcType="VARCHAR"},</if>
            <if test="userEmail != null"> userEmail = #{userEmail, jdbcType="VARCHAR"},</if>
            <if test="userUrl != null"> userUrl = #{userUrl, jdbcType="VARCHAR"},</if>
            <if test="userAvatar != null"> userAvatar = #{userAvatar, jdbcType="VARCHAR"},</if>
            <if test="userLastLoginIp != null"> userLastLoginIp = #{userLastLoginIp, jdbcType="VARCHAR"},</if>
            <if test="userLastLoginTime != null"> userLastLoginTime = #{userLastLoginTime, jdbcType="TIMESTAMP"},</if>
            <if test="userStatus != null"> userStatus = #{userStatus, jdbcType="TIMESTAMP"},</if>
            <!-- 这里有一点更改，我觉得实在没有必要改registertime，就把这个属性去了 -->
        </set>
        where user_id = #{userId,jdbcType="INTEGER"}
    </update>

    <select id="getUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="base_column_list"/>
        from
        <include refid="tb"/>
        where user_id = #{value}
    </select>

    <select id="getUserByName" parameterType="String" resultMap="BaseResultMap" >
        select
        <include refid="base_column_list"/>
        from
        <include refid="tb"/>
         <where>
             user_email = #{value}
         </where>
         limit 1
    </select>

    <select id="getUserByEmail" parameterType="String" resultMap="BaseResultMap" >
        select
        <include refid="base_column_list"/>
        from
        <include refid="tb"/>
        <where>
            user_email = #{value}
        </where>
        <!-- 一个email只能注册一次，所以不用加limit -->
    </select>

    <select id="getUserByNameOrEmail" parameterType="String" resultMap="BaseResultMap" >
        select
        <include refid="base_column_list"/>
        from
        <include refid="tb"/>
        <where>
            user_name = #{value} or user_email = #{value}
        </where>
        limit 1
    </select>

    <select id="listUser" resultMap="BaseResultMap" >
        select
        ( <include refid="base_column_list"/> )
        from
        <include refid="table"/>
        order by `user_status` asc 
    </select>
</mapper>